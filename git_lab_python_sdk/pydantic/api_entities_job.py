# coding: utf-8

"""
    GitLab API

    An OpenAPI definition for the GitLab REST API. Few API resources or endpoints are currently included. The intent is to expand this to match the entire Markdown documentation of the API: <https://docs.gitlab.com/ee/api/>. Contributions are welcome.  When viewing this on gitlab.com, you can test API calls directly from the browser against the `gitlab.com` instance, if you are logged in. The feature uses the current [GitLab session cookie](https://docs.gitlab.com/ee/api/index.html#session-cookie), so each request is made using your account.  Instructions for using this tool can be found in [Interactive API Documentation](https://docs.gitlab.com/ee/api/openapi/openapi_interactive.html) 

    The version of the OpenAPI document: v4
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from git_lab_python_sdk.pydantic.api_entities_commit import APIEntitiesCommit
from git_lab_python_sdk.pydantic.api_entities_job_artifacts import APIEntitiesJobArtifacts
from git_lab_python_sdk.pydantic.api_entities_job_project import APIEntitiesJobProject
from git_lab_python_sdk.pydantic.api_entities_user_basic import APIEntitiesUserBasic

class APIEntitiesJob(BaseModel):
    # The ID of the job
    id: typing.Optional[int] = Field(None, alias='id')

    # The name of the job
    name: typing.Optional[str] = Field(None, alias='name')

    # The current status of the job
    status: typing.Optional[str] = Field(None, alias='status')

    # The stage of the job in the CI/CD pipeline
    stage: typing.Optional[str] = Field(None, alias='stage')

    # The creation time of the job
    created_at: typing.Optional[datetime] = Field(None, alias='created_at')

    # The start time of the job
    started_at: typing.Optional[datetime] = Field(None, alias='started_at')

    # The finish time of the job
    finished_at: typing.Optional[datetime] = Field(None, alias='finished_at')

    commit: typing.Optional[APIEntitiesCommit] = Field(None, alias='commit')

    # Indicates if the job is archived
    archived: typing.Optional[bool] = Field(None, alias='archived')

    # Indicates if the job is allowed to fail
    allow_failure: typing.Optional[bool] = Field(None, alias='allow_failure')

    # The time when the job was erased, if applicable
    erased_at: typing.Optional[datetime] = Field(None, alias='erased_at')

    # The duration of the job in seconds
    duration: typing.Optional[int] = Field(None, alias='duration')

    # The duration the job was queued before execution, in seconds
    queued_duration: typing.Optional[typing.Union[int, float]] = Field(None, alias='queued_duration')

    # The reference for the job
    ref: typing.Optional[str] = Field(None, alias='ref')

    artifacts: typing.Optional[APIEntitiesJobArtifacts] = Field(None, alias='artifacts')

    # Indicates if the job is tagged
    tag: typing.Optional[bool] = Field(None, alias='tag')

    # The URL for accessing the job in the web interface
    web_url: typing.Optional[str] = Field(None, alias='web_url')

    project: typing.Optional[APIEntitiesJobProject] = Field(None, alias='project')

    user: typing.Optional[APIEntitiesUserBasic] = Field(None, alias='user')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
